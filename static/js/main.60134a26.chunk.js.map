{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["KeyFunc","label","memory","setMemory","display","setDisplay","operator","setOperator","keys","func","concat","includes","Number","toString","substr","length","console","log","Clear","Operate","Press","push","Execute","num","GenerateKeyPad","map","data","idx","className","onClick","KeyButton","App","useState","key","setKey","useEffect","useKeyGen","keypad","press","setPress","event","window","addEventListener","removeEventListener","usePress","useKeyPress","useCallback","style","maxWidth","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLA+BMA,EAAQ,SAACC,EAAD,GAA0E,IAAlEC,EAAiE,EAAjEA,OAAOC,EAA0D,EAA1DA,UAAUC,EAAgD,EAAhDA,QAAQC,EAAwC,EAAxCA,WAAWC,EAA6B,EAA7BA,SAASC,EAAoB,EAApBA,YAAYC,EAAQ,EAARA,KACzEC,EAAK,aAET,IADAD,EAAKA,EAAKE,OAAO,CAAC,IAAI,IAAI,QAAQ,YAAY,YACtCC,SAASV,GACf,OAAOA,GACL,IAAK,YACHQ,EAAK,kBAAIJ,EAAWO,OAAOR,EAAQS,WAAWC,OAAO,EAAEV,EAAQS,WAAWE,OAAO,MACnF,MACA,IAAK,OAAKN,EAAK,WACXJ,GAAY,EAAED,GACXF,EAAOa,OAAO,IACfb,EAAO,GAAGE,SAAU,EAAEA,EACtBY,QAAQC,IAAI,iBAAiBf,GAC7BC,EAAUD,KAGhB,MACA,IAAK,KAAM,IAAK,IAAM,IAAK,SACzBO,EAAK,kBAAIS,EAAM,CAAChB,SAAOC,YAAUC,UAAQC,gBAC3C,MACA,IAAI,IAAM,IAAK,IAAK,IAAK,OAAK,IAAK,OAAK,IAAK,IAAK,IAAI,IAAK,IAAK,QACnD,UAARJ,IAAgBA,EAAM,KACd,MAARA,IAAYA,EAAM,QACV,MAARA,IAAYA,EAAM,QACrBQ,GAAgB,IAAXH,EACJ,WACCa,EAAQlB,EAAM,CAACC,SAAOC,YAAUC,UAAQC,eACxCE,GAAY,IACb,WACCL,EAAO,GAAGD,MAAMA,EAChBE,EAAUD,IAEd,MACA,QAASO,EAAK,WACZ,MAAW,MAARR,GAAeG,EAAQS,WAAWF,SAASV,KAAqB,IAAXK,GAC7C,MAARL,GAA2C,IAA5BG,EAAQS,WAAWE,QAAwB,IAAVX,EAD8BK,GAEjFW,EAAMnB,EAAM,CAACG,UAAQC,aAAWC,WAASJ,SAAOC,mBAChDI,GAAY,KAGlB,OAAOE,GAQHW,EAAM,SAACnB,EAAD,GAAyD,IAAjDG,EAAgD,EAAhDA,QAAQC,EAAwC,EAAxCA,WAAWC,EAA6B,EAA7BA,SAASJ,EAAoB,EAApBA,OAAOC,EAAa,EAAbA,UAClDD,EAAOa,OAAO,GAAuB,MAAlBb,EAAO,GAAGD,OAAYE,EAAU,IACnDG,EAAUM,OAAOX,GAASI,EAAWO,OAAOX,IAAUI,EAAW,EAAEJ,GAChEW,OAAOX,GAASI,EAAWO,OAAOR,EAAQH,IAAUI,EAAWD,EAAQH,IAGzEiB,EAAM,SAAC,GAAkC,IAAjCf,EAAgC,EAAhCA,UAAUC,EAAsB,EAAtBA,QAAQC,EAAc,EAAdA,WAC3BD,IAAUQ,OAAO,MAAKT,EAAU,IACnCE,EAAW,IAGPc,EAAQ,SAAClB,EAAD,GAAgD,IAAxCC,EAAuC,EAAvCA,OAAOC,EAAgC,EAAhCA,UAAUC,EAAsB,EAAtBA,QAAQC,EAAc,EAAdA,WAC1B,IAAhBH,EAAOa,QACRb,EAAOmB,KAAK,CAACpB,QAAMG,QAAQQ,OAAOR,KAClCD,EAAUD,KAGVG,GADAH,EAAOoB,EAAQ,CAACpB,SAAOE,UAAQH,WACb,GAAGG,SACrBD,EAAUD,KAIRoB,EAAQ,SAAC,GAA0B,IAAzBpB,EAAwB,EAAxBA,OAAOE,EAAiB,EAAjBA,QAAQH,EAAS,EAATA,MAC7B,EAAmCC,EAAO,GAA7BI,EAAb,EAAOL,MAAuBsB,EAA9B,EAAsBnB,QACtB,OAAOE,GACL,IAAK,IAAK,MAAM,CAAC,CAACL,QAAMG,QAAQQ,OAAQW,EAAMX,OAAOR,MACrD,IAAK,IAAK,MAAM,CAAC,CAACH,QAAMG,QAAQQ,OAAQW,EAAMnB,KAC9C,IAAK,OAAK,MAAM,CAAC,CAACH,QAAMG,QAAQQ,OAAQW,EAAMnB,KAC9C,IAAK,OAAK,MAAM,CAAC,CAACH,QAAMG,QAAQQ,OAAQW,EAAMnB,KAC9C,IAAK,IAAK,MAAM,CAAC,CAACH,QAAMG,QAAQQ,OAAQW,EAAMnB,OAK5CoB,EAAe,SAAChB,EAAD,GAAoE,IAA7DN,EAA4D,EAA5DA,OAAOC,EAAqD,EAArDA,UAAUC,EAA2C,EAA3CA,QAAQC,EAAmC,EAAnCA,WAAWC,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,YACvE,OAAOC,EAAKiB,KAAI,SAACC,EAAKC,GACpB,OAzCY,SAAC1B,EAAM0B,EAAP,GAA8E,IAAlEzB,EAAiE,EAAjEA,OAAOC,EAA0D,EAA1DA,UAAUC,EAAgD,EAAhDA,QAAQC,EAAwC,EAAxCA,WAAWC,EAA6B,EAA7BA,SAASC,EAAoB,EAApBA,YAAYC,EAAQ,EAARA,KAC/EC,EAAKT,EAAQC,EAAM,CAACC,SAAOC,YAAUC,UAAQC,aAAWC,WAASC,cAAYC,SACjF,OAAO,qBAAKoB,UAAW,OAAOD,EAAKE,QAASpB,EAArC,SAA4CR,IAuC1C6B,CAAUJ,EAAKC,EAAI,CAACzB,SAAOC,YAAUC,UAAQC,aAAWC,WAASC,cAAYC,aAoCzEuB,EA1BH,WACV,MAA6BC,oBAAS,GAAtC,mBAAO1B,EAAP,KAAgBC,EAAhB,KACA,EAAyByB,mBAAS,IAAlC,mBAAO9B,EAAP,KAAcC,EAAd,KACA,EAA2B6B,mBAAS,GAApC,mBAAO5B,EAAP,KAAeC,EAAf,KACMG,EA5GQ,SAAC,GAAa,IAAZJ,EAAW,EAAXA,QAChB,EAAmB4B,mBAAS,MAA5B,mBAAOC,EAAP,KAAWC,EAAX,KACI1B,EAAK,CAAC,KAAK,OAAI,IAAI,OAAI,IAAI,IAAI,IAAI,OAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,KAKnF,OAJA2B,qBAAU,WACR/B,IAAUQ,OAAO,GAAGsB,EAAO,MAAMA,EAAO,OACxC,CAAC9B,IACHI,EAAK,GAAGyB,EACDzB,EAqGI4B,CAAU,CAAChC,YAChBiC,EAAOb,EAAehB,EAAK,CAACN,SAAOC,YAAUC,UAAQC,aAAWC,WAASC,gBACzE+B,EAjIO,WACb,MAAuBN,mBAAS,IAAhC,mBAAOM,EAAP,KAAaC,EAAb,KAeA,OAdAJ,qBAAU,WACR,IAAMf,EAAM,SAAAoB,GACV,IAAKP,EAAKO,EAALP,IACI,UAANA,IAAcA,EAAI,KACZ,MAANA,IAAUA,EAAI,QACR,MAANA,IAAUA,EAAI,QACjBM,EAASN,IAGX,OADAQ,OAAOC,iBAAiB,QAAStB,GAC1B,WACLmB,EAAS,IACTE,OAAOE,oBAAoB,QAASvB,OAGjCkB,EAiHKM,GAKZ,OAjBgB,SAAC3C,EAAD,GAA0E,IAAlEC,EAAiE,EAAjEA,OAAOC,EAA0D,EAA1DA,UAAUC,EAAgD,EAAhDA,QAAQC,EAAwC,EAAxCA,WAAWC,EAA6B,EAA7BA,SAASC,EAAoB,EAApBA,YAAYC,EAAQ,EAARA,KACjF2B,qBAAU,WACRnC,EAAQC,EAAM,CAACC,SAAOC,YAAUC,UAAQC,aAAWC,WAASC,cAAYC,QAAxER,KACA,CAACC,EAAMG,EAAQF,EAAOI,EAASD,EAAWF,EAAUI,EAAYC,IAUlEqC,CAAYP,EAAM,CAACpC,SAAOC,YAAUC,UAAQC,aAAWC,WAASC,cAAYC,SAC5EsC,uBAAY,WACV9B,QAAQC,IAAI,qDACZ,IAEA,iCACA,sBAAK8B,MAAO,CAACC,SAAS,SAAtB,UACE,qBAAKpB,UAAU,UAAf,SACGxB,IAEH,qBAAKwB,UAAU,iBAAf,SACGS,UCnIMY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.60134a26.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\r\n//|===================| Keydown Event Listener |==================|//\r\nconst usePress=()=>{\r\n  const [press,setPress]=useState('')\r\n  useEffect(()=>{\r\n    const Press=event=>{\r\n      let {key}=event\r\n      if(key==='Enter')key='=';\r\n      if(key==='*')key='×';\r\n      if(key==='/')key='÷';\r\n      setPress(key)\r\n    }\r\n    window.addEventListener('keyup', Press);\r\n    return ()=>{\r\n      setPress('')\r\n      window.removeEventListener('keyup', Press);\r\n    }\r\n  })\r\n  return press\r\n}\r\n//|===================| Keys Array |==============================|//\r\nconst useKeyGen=({display})=>{\r\n  const [key,setKey]=useState('AC')\r\n  let keys=['AC','±','%','÷','7','8','9','×','4','5','6','-','1','2','3','+','0','.','='];\r\n  useEffect(()=>{\r\n    display===Number(0)?setKey('AC'):setKey('C') \r\n  },[display])\r\n  keys[0]=key\r\n  return keys; \r\n}\r\n//|===================| Function List |===========================|//\r\nconst KeyFunc=(label,{memory,setMemory,display,setDisplay,operator,setOperator,keys})=>{\r\n  let func=()=>{};\r\n  keys=keys.concat(['/','*','Enter','Backspace','Escape'])\r\n  if(keys.includes(label)){\r\n    switch(label){\r\n      case 'Backspace':\r\n        func=()=>setDisplay(Number(display.toString().substr(0,display.toString().length-1)))\r\n      break;\r\n      case '±': func=()=>{\r\n          setDisplay(-1*display);\r\n          if(memory.length>0){\r\n            memory[0].display=(-1*display)\r\n            console.log(\"memory update:\",memory)\r\n            setMemory(memory);\r\n          }\r\n        }        \r\n      break;\r\n      case 'AC': case 'C':  case 'Escape': \r\n        func=()=>Clear({memory,setMemory,display,setDisplay});\r\n      break;\r\n      case'+':  case '-': case '×': case '÷': case '%': case'=': case 'Enter':\r\n        if(label==='Enter')label='=';\r\n        if(label==='*')label='×';\r\n        if(label==='/')label='÷';\r\n        func=operator===false\r\n        ?()=>{\r\n          Operate(label,{memory,setMemory,display,setDisplay});\r\n          setOperator(true);}\r\n        :()=>{\r\n          memory[0].label=label\r\n          setMemory(memory)\r\n        }\r\n      break;  \r\n      default: func=()=>{\r\n        if(label==='.' && display.toString().includes(label) && operator===false) return func\r\n        if(label==='0' && display.toString().length===1 && display===0)return func\r\n        Press(label,{display,setDisplay,operator,memory,setMemory});\r\n        setOperator(false)}\r\n    }\r\n  }\r\n  return func\r\n} \r\n//|===================| Button Component |---=====================|//\r\nconst KeyButton=(label,idx,{memory,setMemory,display,setDisplay,operator,setOperator,keys})=>{\r\n  let func=KeyFunc(label,{memory,setMemory,display,setDisplay,operator,setOperator,keys});\r\n  return <div className={\"item\"+idx} onClick={func}>{label}</div>\r\n}\r\n//|===================| Number Key Function |=====================|//\r\nconst Press=(label,{display,setDisplay,operator,memory,setMemory})=>{\r\n  if(memory.length>0 && memory[0].label==='=')setMemory([])\r\n  if(operator) Number(label) ? setDisplay(Number(label)) : setDisplay(0+label)\r\n  else  Number(label) ? setDisplay(Number(display+label)) : setDisplay(display+label)\r\n}\r\n//|===================| Clear and Reset |=========================|//\r\nconst Clear=({setMemory,display,setDisplay})=>{\r\n  if(display===Number('0'))setMemory([]);\r\n  setDisplay(0)\r\n}\r\n//|===================| Operate Function |========================|//\r\nconst Operate=(label,{memory,setMemory,display,setDisplay})=>{\r\n  if(memory.length===0){\r\n    memory.push({label,display:Number(display)})\r\n    setMemory(memory)\r\n  }else{\r\n    memory=Execute({memory,display,label})\r\n    setDisplay(memory[0].display)\r\n    setMemory(memory)\r\n  }\r\n}\r\n//|===================| Execute |=================================|//\r\nconst Execute=({memory,display,label})=>{\r\n  const {label:operator,display:num}=memory[0];\r\n  switch(operator){\r\n    case '+': return[{label,display:Number((num + Number(display)))}]\r\n    case '-': return[{label,display:Number((num - display))}]\r\n    case '×': return[{label,display:Number((num * display))}]\r\n    case '÷': return[{label,display:Number((num / display))}]\r\n    case '%': return[{label,display:Number((num % display))}]\r\n    default : \r\n  }\r\n}  \r\n//|===================| KeyPad Generator |========================|//\r\nconst GenerateKeyPad=(keys,{memory,setMemory,display,setDisplay,operator,setOperator})=>{\r\n  return keys.map((data,idx)=>{\r\n    return KeyButton(data,idx,{memory,setMemory,display,setDisplay,operator,setOperator,keys})\r\n  })\r\n}\r\n//|===================| Key Press Trigger |=======================|//\r\nconst useKeyPress=(label,{memory,setMemory,display,setDisplay,operator,setOperator,keys})=>{\r\n  useEffect(()=>{\r\n    KeyFunc(label,{memory,setMemory,display,setDisplay,operator,setOperator,keys})()\r\n  },[label,display,memory,operator,setDisplay,setMemory,setOperator,keys])\r\n}\r\n//|===============================================================|//\r\nconst App = () => {\r\n  const [operator,setOperator]=useState(true)\r\n  const [memory,setMemory]=useState([]);\r\n  const [display,setDisplay]=useState(0);\r\n  const keys=useKeyGen({display})\r\n  const keypad=GenerateKeyPad(keys,{memory,setMemory,display,setDisplay,operator,setOperator});\r\n  const press=usePress();\r\n  useKeyPress(press,{memory,setMemory,display,setDisplay,operator,setOperator,keys})\r\n  useCallback(()=>{\r\n    console.log(\"Sorry I don't know how to use this Use CallBack\")\r\n  },[])\r\n  return (\r\n    <center>\r\n    <div style={{maxWidth:\"500px\"}}>\r\n      <div className='display'>\r\n        {display}\r\n      </div>\r\n      <div className='grid-container'>\r\n        {keypad}\r\n      </div>\r\n    </div>\r\n    </center>\r\n    \r\n  )\r\n}\r\n//|===============================================================|//\r\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}